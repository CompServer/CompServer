# Generated by Django 4.2.6 on 2024-02-27 20:03

import competitions.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AbstractTournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', competitions.models.StatusField(choices=[('SETUP', 'Setup'), ('OPEN', 'Open'), ('CLOSED', 'Closed'), ('COMPLETE', 'Complete'), ('ARCHIVED', 'Archived')], default='SETUP', max_length=8)),
                ('points', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
            ],
            options={
                'ordering': ['competition', 'event'],
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=257)),
            ],
        ),
        migrations.CreateModel(
            name='SiteConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('icon', models.CharField(blank=True, max_length=255, null=True)),
                ('style_sheet', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SingleEliminationTournament',
            fields=[
                ('abstracttournament_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='competitions.abstracttournament')),
            ],
            bases=('competitions.abstracttournament',),
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('coach', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='competitions.organization')),
                ('sport', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='competitions.sport')),
            ],
            options={
                'ordering': ['sport', 'organization', 'name'],
                'unique_together': {('organization', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(blank=True, null=True)),
                ('_cached_str', models.TextField(blank=True, null=True)),
                ('advancers', models.ManyToManyField(blank=True, related_name='won_matches', to='competitions.team')),
                ('prev_matches', models.ManyToManyField(blank=True, related_name='next_matches', to='competitions.match')),
                ('starting_teams', models.ManyToManyField(blank=True, related_name='round1_matches', to='competitions.team')),
                ('tournament', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='match_set', to='competitions.abstracttournament')),
            ],
            options={
                'verbose_name_plural': 'Matches',
                'ordering': ['tournament'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('sport', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='competitions.sport')),
            ],
            options={
                'ordering': ['sport', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('status', competitions.models.StatusField(choices=[('SETUP', 'Setup'), ('OPEN', 'Open'), ('CLOSED', 'Closed'), ('COMPLETE', 'Complete'), ('ARCHIVED', 'Archived')], default='SETUP', max_length=8)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('access_key', models.CharField(blank=True, default=competitions.models.get_random_access_key, max_length=10, null=True)),
                ('plenary_judges', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('sport', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='competitions.sport')),
                ('teams', models.ManyToManyField(blank=True, to='competitions.team')),
            ],
            options={
                'ordering': ['-start_date', 'name'],
                'unique_together': {('start_date', 'name')},
            },
        ),
        migrations.AddField(
            model_name='abstracttournament',
            name='competition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournament_set', to='competitions.competition'),
        ),
        migrations.AddField(
            model_name='abstracttournament',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournament_set', to='competitions.event'),
        ),
        migrations.AddField(
            model_name='abstracttournament',
            name='judges',
            field=models.ManyToManyField(blank=True, related_name='tournament_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='abstracttournament',
            name='teams',
            field=models.ManyToManyField(related_name='tournament_set', to='competitions.team'),
        ),
        migrations.CreateModel(
            name='Ranking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.PositiveSmallIntegerField()),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competitions.team')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ranking_set', to='competitions.abstracttournament')),
            ],
            options={
                'ordering': ['tournament', 'rank'],
                'unique_together': {('tournament', 'team')},
            },
        ),
    ]
